// —è–á–¥—É: –í–∞–ª–∫–∏ ‚Äî Mini App —Å–∫–µ–ª–µ—Ç (SPA –±–µ–∑ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫—ñ–≤)

const AppState = {
  view: 'home',
  role: null,                    // 'driver' | 'passenger'
  authed: false,
  notifications: [],
  data: {}
};

// –§–µ–π–∫–æ–≤—ñ –¥–∞–Ω—ñ ‚Äî —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –¥–ª—è –≤–æ–¥—ñ—ó–≤ —Ç–∞ –ø–∞—Å–∞–∂–∏—Ä—ñ–≤
const STREETS = [
  '–≤—É–ª. –í–µ—Å–Ω—è–Ω–∞, 12','–≤—É–ª. –ó–æ—Ä—è–Ω–∞, 7','–≤—É–ª. –ú—É–∑–µ–π–Ω–∞, 3','–≤—É–ª. –°—Ç–∞–¥—ñ–æ–Ω–Ω–∞, 45',
  '–≤—É–ª. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞, 10','–≤—É–ª. –®–µ–≤—á–µ–Ω–∫–∞, 22','–≤—É–ª. –•–∞—Ä—å–∫—ñ–≤—Å—å–∫–∞, 1','–≤—É–ª. –ú–æ–ª–æ–¥—ñ–∂–Ω–∞, 18',
  '–ø—Ä–æ–≤. –õ—ñ—Å–æ–≤–∏–π, 4','–≤—É–ª. –°–æ–Ω—è—á–Ω–∞, 9','–≤—É–ª. –ü–æ–ª—å–æ–≤–∞, 16','–≤—É–ª. –ö–≤—ñ—Ç–∫–æ–≤–∞, 8',
  '–≤—É–ª. –î–∂–µ—Ä–µ–ª—å–Ω–∞, 14','–≤—É–ª. –ú–∏—Ä—É, 2','–≤—É–ª. –ü—É—à–∫—ñ–Ω–∞, 11','–≤—É–ª. –°–ª–æ–±–æ–∂–∞–Ω—Å—å–∫–∞, 33',
  '–≤—É–ª. –†—ñ—á–∫–æ–≤–∞, 6','–≤—É–ª. –í–∞–ª–∫—ñ–≤—Å—å–∫–∞, 5','–≤—É–ª. –ö–æ–∑–∞—Ü—å–∫–∞, 21','–≤—É–ª. –°–≤–æ–±–æ–¥–∏, 27'
];

const Random = {
  code: () => String(Math.floor(100000 + Math.random()*900000)),
  pick: arr => arr[Math.floor(Math.random()*arr.length)],
};

const Drivers = [
  {id:'d1', name:'–°–µ—Ä–≥—ñ–π', phone:'+380 67 123 45 67', car:'Skoda Octavia', rating:4.7, online:true, busy:false, eta:0,
    reviews:[
      {a:'–í—ñ—Ç–∞', text:'–í—Å–µ —á—ñ—Ç–∫–æ —ñ –≤—á–∞—Å–Ω–æ. –†–µ–∫–æ–º–µ–Ω–¥—É—é!', stars:5},
      {a:'–Ü–≥–æ—Ä', text:'–á—Ö–∞–≤ —à–≤–∏–¥–∫—É–≤–∞—Ç–æ, –∞–ª–µ –∞–∫—É—Ä–∞—Ç–Ω–æ.', stars:4},
      {a:'–û–ª–µ—Å—è', text:'–ù–µ —Å–ø–æ–¥–æ–±–∞–≤—Å—è –∑–∞–ø–∞—Ö —É —Å–∞–ª–æ–Ω—ñ.', stars:3}
    ]},
  {id:'d2', name:'–û–ª–µ–∫—Å–∞–Ω–¥—Ä', phone:'+380 50 222 31 21', car:'Toyota Corolla', rating:4.9, online:true, busy:true, eta:12,
    reviews:[
      {a:'–ú–∞—Ä–∏–Ω–∞', text:'–î—É–∂–µ –≤–≤—ñ—á–ª–∏–≤–∏–π, –¥–æ–ø–æ–º—ñ–≥ –∑ –±–∞–≥–∞–∂–µ–º.', stars:5},
      {a:'–†–æ–º–∞–Ω', text:'–ó–∞—Ç—Ä–∏–º–∞–≤—Å—è –Ω–∞ 5 —Ö–≤–∏–ª–∏–Ω.', stars:4}
    ]},
  {id:'d3', name:'–Ü–≤–∞–Ω', phone:'+380 93 555 14 14', car:'Renault Megane', rating:4.5, online:false, busy:true, eta:25,
    reviews:[{a:'–Æ–ª—ñ—è', text:'–ù–æ—Ä–º–∞–ª—å–Ω–æ, –±–µ–∑ –∑–∞–π–≤–∏—Ö —Ä–æ–∑–º–æ–≤.', stars:4}]},
  {id:'d4', name:'–¢–∞—Ä–∞—Å', phone:'+380 97 777 77 11', car:'Volkswagen Golf', rating:4.2, online:true, busy:false, eta:0,
    reviews:[
      {a:'–õ–µ—Å—è', text:'–¢—Ä–æ—Ö–∏ –±—Ä—É–¥–Ω–∏–π –∫–∏–ª–∏–º–æ–∫, –∞–ª–µ –Ω–µ–¥–∞–ª–µ–∫–æ —ó—Ö–∞–ª–∏.', stars:3},
      {a:'–ê–Ω–Ω–∞', text:'–ü—Ä–∏—î–º–Ω–∞ –ø–æ—ó–∑–¥–∫–∞.', stars:5}
    ]},
  {id:'d5', name:'–Æ—Ä—ñ–π', phone:'+380 63 801 33 09', car:'Hyundai Elantra', rating:4.8, online:true, busy:false, eta:0,
    reviews:[{a:'–û–ª–µ–≥', text:'–®–≤–∏–¥–∫–æ —Ç–∞ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ.', stars:5}]},
  {id:'d6', name:'–ü–µ—Ç—Ä–æ', phone:'+380 95 441 92 12', car:'Daewoo Lanos', rating:3.9, online:false, busy:true, eta:35,
    reviews:[{a:'–ö–∞—Ç–µ—Ä–∏–Ω–∞', text:'–î–µ—à–µ–≤–æ, –∞–ª–µ —à—É–º–Ω–∞ –º–∞—à–∏–Ω–∞.', stars:3}]},
  {id:'d7', name:'–í—ñ–∫—Ç–æ—Ä', phone:'+380 68 111 22 33', car:'Kia Ceed', rating:4.6, online:true, busy:true, eta:7,
    reviews:[{a:'–ú–∏–∫–∏—Ç–∞', text:'–ü—Ä–∏—ó—Ö–∞–≤ —à–≤–∏–¥–∫–æ, –¥—è–∫—É—é!', stars:5}]},
  {id:'d8', name:'–†–æ–º–∞–Ω', phone:'+380 66 909 00 55', car:'Mazda 3', rating:4.4, online:true, busy:false, eta:0, reviews:[]},
  {id:'d9', name:'–î–º–∏—Ç—Ä–æ', phone:'+380 73 999 88 77', car:'Opel Astra', rating:4.1, online:false, busy:true, eta:18, reviews:[]},
  {id:'d10',name:'–ú–∞–∫—Å–∏–º', phone:'+380 98 345 67 80', car:'Nissan Leaf', rating:4.9, online:true, busy:false, eta:0, reviews:[]},
  {id:'d11',name:'–õ–µ–≤', phone:'+380 67 301 77 21', car:'Skoda Fabia', rating:4.0, online:false, busy:true, eta:40, reviews:[]},
  {id:'d12',name:'–ê—Ä—Ç–µ–º', phone:'+380 50 777 04 04', car:'Peugeot 308', rating:4.3, online:true, busy:false, eta:0, reviews:[]}
];

const Passengers = [
  {id:'p1', name:'–í—ñ—Ç–∞', phone:'+380 67 000 11 22', rating:4.8, online:true,
    orders:[] , reviews:[
      {a:'–°–µ—Ä–≥—ñ–π', text:'–ü—É–Ω–∫—Ç—É–∞–ª—å–Ω–∞, –ø—Ä–∏—î–º–Ω–∞ –≤ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—ñ.', stars:5},
      {a:'–û–ª–µ–∫—Å–∞–Ω–¥—Ä', text:'–ó–∞–ø—ñ–∑–Ω–∏–ª–∞—Å—å –Ω–∞ –∫—ñ–ª—å–∫–∞ —Ö–≤–∏–ª–∏–Ω.', stars:4}
    ]},
  {id:'p2', name:'–ú–∏—Ö–∞–π–ª–æ', phone:'+380 50 120 33 44', rating:4.1, online:true, orders:[], reviews:[
    {a:'–Ü–≤–∞–Ω', text:'–ì—É—á–Ω–æ –≥–æ–≤–æ—Ä–∏–≤ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É.', stars:3}
  ]},
  {id:'p3', name:'–û–ª–µ–Ω–∞', phone:'+380 93 900 44 55', rating:4.9, online:false, orders:[], reviews:[]},
  {id:'p4', name:'–Ü–≥–æ—Ä', phone:'+380 63 222 88 99', rating:4.2, online:true, orders:[], reviews:[]},
  {id:'p5', name:'–õ—ñ–¥–∞', phone:'+380 97 121 21 21', rating:4.7, online:false, orders:[], reviews:[]}
];

// –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è: —Å—Ç–∞—Ç—É—Å–∏ ‚Äî active(–∑–µ–ª–µ–Ω–∏–π), queued(–ø–æ–º–∞—Ä–∞–Ω—á–µ–≤–∏–π, –¥–ª—è –≤–æ–¥—ñ—è), archived(—Å—ñ—Ä–∏–π)
const DriverOrders = {
  d1: [
    {code: Random.code(), passenger:'–í—ñ—Ç–∞', date:'2025-08-26', time:'18:45', status:'active', route:'–í–∞–ª–∫–∏ ‚Üí –•–∞—Ä–∫—ñ–≤'},
    {code: Random.code(), passenger:'–Ü–≥–æ—Ä', date:'2025-08-26', time:'19:20', status:'queued', route:'–•–∞—Ä–∫—ñ–≤ ‚Üí –í–∞–ª–∫–∏'}
  ],
  d2: [
    {code: Random.code(), passenger:'–ú–∞—Ä–∏–Ω–∞', date:'2025-08-26', time:'18:10', status:'active', route:'–í–∞–ª–∫–∏ ‚Üí –¶–µ–Ω—Ç—Ä'},
    {code: Random.code(), passenger:'–†–æ–º–∞–Ω', date:'2025-08-26', time:'20:00', status:'queued', route:'–í–∞–ª–∫–∏ ‚Üí –•–∞—Ä–∫—ñ–≤'}
  ],
  d4: [{code: Random.code(), passenger:'–ê–Ω–Ω–∞', date:'2025-08-24', time:'13:10', status:'archived', route:'–ú—É–∑–µ–π–Ω–∞ ‚Üí –°—Ç–∞–¥—ñ–æ–Ω–Ω–∞'}],
  d5: [],
  d7: [],
  d8: [],
  d10: []
};

const PassengerOrders = {
  p1: [{code: Random.code(), driver:'–°–µ—Ä–≥—ñ–π', date:'2025-08-26', time:'18:45', status:'active', route:'–í–∞–ª–∫–∏ ‚Üí –•–∞—Ä–∫—ñ–≤'}],
  p2: [{code: Random.code(), driver:'–û–ª–µ–∫—Å–∞–Ω–¥—Ä', date:'2025-08-20', time:'09:30', status:'archived', route:'–°—Ç–∞–¥—ñ–æ–Ω–Ω–∞ ‚Üí –ú—É–∑–µ–π–Ω–∞'}],
  p3: [],
  p4: [],
  p5: []
};

// –£—Ç–∏–ª—ñ—Ç–∏ UI
const $ = sel => document.querySelector(sel);
const app = () => $('#app');
const setView = (view, payload={}) => { AppState.view=view; AppState.data=payload; render(); };
const back = () => window.history.back();

window.addEventListener('popstate', () => render());
function go(view, payload={}){
  history.pushState({view, payload}, '', '#'+view);
  setView(view, payload);
}

function iconStar(full){ return `<i class="${full?'ri-star-fill':'ri-star-line'}"></i>`; }
function Stars(val=0){
  const full = Math.round(val);
  return `<div class="stars">${Array.from({length:5},(_,i)=>iconStar(i<full)).join('')}</div>`;
}
function StatusPill(status){
  if(status==='active') return `<span class="pill green">–∞–∫—Ç–∏–≤–Ω–µ</span>`;
  if(status==='queued') return `<span class="pill orange">–≤ —á–µ—Ä–∑—ñ</span>`;
  return `<span class="pill grey">–∞—Ä—Ö—ñ–≤</span>`;
}
function Dot(color){ return `<span class="dot ${color}"></span>`; }

function header({showBack=false, role=null}={}){
  const avatarIcon = role==='driver' ? 'ri-car-line' : role==='passenger' ? 'ri-armchair-line' : null;
  return `
    <div class="header">
      <div class="header-left">
        ${showBack ? `<button class="back-btn" onclick="back()"><i class="ri-arrow-left-line"></i></button>` : ''}
      </div>
      <div class="header-right">
        ${avatarIcon ? `<div class="avatar"><i class="${avatarIcon}"></i></div>` : ''}
        <button class="icon-btn" onclick="toggleNotices()">
          <i class="ri-notification-3-line"></i>
        </button>
        ${!AppState.authed ? `<button class="btn" onclick="authNow()"><i class="ri-login-box-line"></i> –£–≤—ñ–π—Ç–∏</button>` : `<button class="btn" onclick="logout()"><i class="ri-logout-box-line"></i> –í–∏–π—Ç–∏</button>`}
      </div>
    </div>
  `;
}

function authNow(){
  // —ñ–º—ñ—Ç–∞—Ü—ñ—è Telegram Auth ‚Äî –ø—Ä–æ—Å—Ç–æ —Ñ–ª—ñ–ø —Å—Ç–∞–Ω—É
  AppState.authed = true;
  if(AppState.role==='driver') go('driver.home'); else if(AppState.role==='passenger') go('passenger.home');
}
function logout(){
  AppState.authed = false;
  AppState.role = null;
  go('home');
}

/* Notifications */
function toggleNotices(){
  const p = document.querySelector('#notice-panel');
  if(!p) return;
  p.classList.toggle('active');
}
function pushNotice(text){
  AppState.notifications.unshift({id:Date.now(), text});
  renderNotices();
}

function renderNotices(){
  let n = $('#notice-panel');
  if(!n){
    n = document.createElement('div');
    n.id = 'notice-panel';
    n.className = 'notice-panel';
    document.body.appendChild(n);
  }
  const items = AppState.notifications.length
    ? AppState.notifications.map(x=>`<div class="notice-item"><i class="ri-notification-3-line"></i><div>${x.text}</div></div>`).join('')
    : `<div class="notice-item"><i class="ri-notification-off-line"></i><div>–ù–µ–º–∞—î —Å–ø–æ–≤—ñ—â–µ–Ω—å</div></div>`;
  n.innerHTML = `<div class="row"><strong>–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è</strong><button class="back-btn" onclick="document.querySelector('#notice-panel').classList.remove('active')">–ó–∞–∫—Ä–∏—Ç–∏</button></div><div class="mt-3 stack">${items}</div>`;
}

/* HOME */
function viewHome(){
  return `
    <div class="card">
      ${header()}
      <div class="logo">
        <span>—è–á–¥—É</span><span class="logo-emoji">üöï</span>
      </div>
      <div class="sub">–õ–æ–∫–∞–ª—å–Ω–∏–π —Å–µ—Ä–≤—ñ—Å: –ø–æ–ø—É—Ç–∫–∞, —Ç–∞–∫—Å—ñ —Ç–∞ –í–∞–ª–∫–∏ ‚Üî –•–∞—Ä–∫—ñ–≤</div>
      <div class="actions">
        <button class="action-btn" onclick="go('auth.driver')">
          <i class="ri-steering-2-line"></i> –Ø –≤–æ–¥—ñ–π
        </button>
        <button class="action-btn" onclick="go('auth.passenger')">
          <i class="ri-user-3-line"></i> –Ø –ø–∞—Å–∞–∂–∏—Ä
        </button>
      </div>
      <div class="mt-6 notice">
        –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ —ñ–∫–æ–Ω–∫–∏, glassmorphism, –∞–¥–∞–ø—Ç–∏–≤. –ö–Ω–æ–ø–∫–∞ ¬´–£–≤—ñ–π—Ç–∏¬ª –¥–æ—Å—Ç—É–ø–Ω–∞ –∑–∞–≤–∂–¥–∏.
      </div>
    </div>
  `;
}

/* AUTH */
function viewAuth(role){
  AppState.role = role;
  const roleLabel = role==='driver' ? '–≤–æ–¥—ñ–π' : '–ø–∞—Å–∞–∂–∏—Ä';
  const avatarIcon = role==='driver' ? 'ri-car-line' : 'ri-armchair-line';
  return `
    <div class="card">
      ${header({showBack:true, role})}
      <div class="row gap-3">
        <div class="avatar"><i class="${avatarIcon}"></i></div>
        <div>
          <div class="h1">–í—Ö—ñ–¥ ‚Äî ${roleLabel}</div>
          <div class="sub">–ê–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è —á–µ—Ä–µ–∑ Telegram. –ü–æ–ª—è –ª–æ–≥—ñ–Ω—É –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω—ñ.</div>
        </div>
      </div>

      <div class="stack mt-5">
        <button class="btn primary block" onclick="authNow()"><i class="ri-login-box-line"></i> –£–≤—ñ–π—Ç–∏</button>
        <button class="btn block" onclick="alert('¬´–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å¬ª = –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —á–µ—Ä–µ–∑ Telegram (–ø—ñ–∑–Ω—ñ—à–µ)')">
          <i class="ri-send-plane-2-line"></i> –ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å
        </button>
      </div>
    </div>
  `;
}

/* DRIVER HOME */
function viewDriverHome(){
  const meId = 'd1'; // –¥–µ–º–æ
  const myOrders = DriverOrders[meId] || [];
  const activeCount = myOrders.filter(o=>o.status==='active').length;
  const queuedCount = myOrders.filter(o=>o.status==='queued').length;
  const seekingPassengers = sampleSeekingPassengers().length;

  return `
    <div class="card">
      ${header({showBack:true, role:'driver'})}
      <div class="h1">–ü–∞–Ω–µ–ª—å –≤–æ–¥—ñ—è</div>
      <div class="sub">–í–∞—à—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ —Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</div>

      <div class="stack">
        <div class="section stack">
          <div class="row">
            <div class="item left" onclick="go('driver.orders')">
              <div class="meta"><i class="ri-smartphone-line"></i><div>
                <div class="name">–ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</div>
                <div class="muted">–ê–∫—Ç–∏–≤–Ω—ñ: ${activeCount} ‚Ä¢ –í —á–µ—Ä–∑—ñ: ${queuedCount}</div>
              </div></div>
            </div>
          </div>

          <div class="row">
            <div class="item left" onclick="go('driver.seeking')">
              <div class="meta"><i class="ri-user-search-line"></i><div>
                <div class="name">–®—É–∫–∞—é—Ç—å –≤–æ–¥—ñ—è –∑–∞—Ä–∞–∑</div>
                <div class="muted">–ö—ñ–ª—å–∫—ñ—Å—Ç—å: ${seekingPassengers}</div>
              </div></div>
              ${Dot('green')}
            </div>
          </div>

          <div class="row">
            <div class="item left" onclick="go('driver.rating')">
              <div class="meta"><i class="ri-star-smile-line"></i><div>
                <div class="name">–ú—ñ–π —Ä–µ–π—Ç–∏–Ω–≥</div>
                <div class="muted">–í—ñ–¥–≥—É–∫–∏ —Ç–∞ –æ—Ü—ñ–Ω–∫–∏</div>
              </div></div>
              <div>${Stars(4.7)}</div>
            </div>
          </div>

          <div class="row">
            <div class="item left" onclick="go('driver.kharkiv')">
              <div class="meta"><i class="ri-route-line"></i><div>
                <div class="name">–í–∞–ª–∫–∏ ‚Äî –•–∞—Ä–∫—ñ–≤</div>
                <div class="muted">–°–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π –ø–æ—Ç–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω—å</div>
              </div></div>
            </div>
          </div>

          <div class="row">
            <div class="item left" onclick="driverArrived()">
              <div class="meta"><i class="ri-map-pin-time-line"></i><div>
                <div class="name">–Ø –Ω–∞ –º—ñ—Å—Ü—ñ</div>
                <div class="muted">–ú–∏—Ç—Ç—î–≤–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø–∞—Å–∞–∂–∏—Ä—É</div>
              </div></div>
              <span class="pill green">—à–≤–∏–¥–∫–∞ –¥—ñ—è</span>
            </div>
          </div>
        </div>

        <div class="section stack">
          <div class="row">
            <div class="item left" onclick="go('driver.settings')">
              <div class="meta"><i class="ri-settings-3-line"></i><div class="name">–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</div></div>
            </div>
          </div>
          <div class="row">
            <div class="item left" onclick="go('driver.qr')">
              <div class="meta"><i class="ri-qr-code-line"></i><div class="name">QR-–∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç–∏</div></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  `;
}

function driverArrived(){
  pushNotice('–í–æ–¥—ñ–π –≤–∂–µ —á–µ–∫–∞—î –Ω–∞ –º—ñ—Å—Ü—ñ.');
  alert('–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ: ¬´–í–æ–¥—ñ–π –≤–∂–µ —á–µ–∫–∞—î –Ω–∞ –º—ñ—Å—Ü—ñ¬ª.');
}

/* DRIVER: Orders */
function viewDriverOrders(){
  const meId = 'd1';
  const list = (DriverOrders[meId]||[]);
  return `
    <div class="card">
      ${header({showBack:true, role:'driver'})}
      <div class="h1">–ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</div>
      <div class="stack mt-4">
        ${list.length ? list.map(o=>`
          <div class="item" onclick="go('driver.order.detail',{order:'${o.code}'})">
            <div>
              <div class="name">#${o.code} ‚Äî ${o.passenger}</div>
              <div class="muted">${o.date} ‚Ä¢ ${o.time} ‚Ä¢ ${o.route}</div>
            </div>
            ${StatusPill(o.status)}
          </div>
        `).join('') : `<div class="notice">–ü–æ–∫–∏ –Ω–µ–º–∞—î –∑–∞–º–æ–≤–ª–µ–Ω—å</div>`}
      </div>
    </div>
  `;
}

function viewDriverOrderDetail(){
  const meId = 'd1';
  const code = AppState.data.order;
  const o = (DriverOrders[meId]||[]).find(x=>x.code===code);
  if(!o) return simpleCard('–î–µ—Ç–∞–ª—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è','–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.');
  return `
    <div class="card">
      ${header({showBack:true, role:'driver'})}
      <div class="h1">–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è #${o.code}</div>
      <div class="section stack mt-4">
        <div class="row"><strong>–ü–∞—Å–∞–∂–∏—Ä</strong><span>${o.passenger}</span></div>
        <div class="row"><strong>–î–∞—Ç–∞ —ñ —á–∞—Å</strong><span>${o.date} ‚Ä¢ ${o.time}</span></div>
        <div class="row"><strong>–ú–∞—Ä—à—Ä—É—Ç</strong><span>${o.route}</span></div>
        <div class="row"><strong>–°—Ç–∞—Ç—É—Å</strong>${StatusPill(o.status)}</div>
      </div>
      <div class="stack mt-4">
        <button class="btn" onclick="driverArrived()"><i class="ri-map-pin-time-line"></i> –Ø –Ω–∞ –º—ñ—Å—Ü—ñ</button>
      </div>
    </div>
  `;
}

/* DRIVER: Seeking passengers (–æ–Ω–ª–∞–π–Ω/–∑–∞–±—Ä–æ–Ω—å–æ–≤–∞–Ω—ñ) */
function sampleSeekingPassengers(){
  // 8 –ª—é–¥–µ–π, 5 –æ–Ω–ª–∞–π–Ω, —Ä–µ—à—Ç–∞ –∑–∞–±—Ä–æ–Ω—å–æ–≤–∞–Ω—ñ
  const names = ['–í—ñ—Ç–∞','–ú–∏—Ö–∞–π–ª–æ','–û–ª–µ–Ω–∞','–Ü–≥–æ—Ä','–õ—ñ–¥–∞','–û–ª–µ—Å—è','–†–æ–º–∞–Ω','–ö–∞—Ç–µ—Ä–∏–Ω–∞'];
  return names.map((n,i)=>({
    name:n,
    booked: i>=5,
    from: Random.pick(STREETS),
    to: Random.pick(STREETS),
    when: i%2? '—Å—å–æ–≥–æ–¥–Ω—ñ, 19:00':'–∑–∞—Ä–∞–∑',
    phone:'+380 '+(60+i)+ ' ' + (100+ i*7) + ' ' + (20 + i)
  }));
}
function viewDriverSeeking(){
  const items = sampleSeekingPassengers();
  return `
    <div class="card">
      ${header({showBack:true, role:'driver'})}
      <div class="h1">–®—É–∫–∞—é—Ç—å –≤–æ–¥—ñ—è –∑–∞—Ä–∞–∑</div>
      <div class="stack mt-4">
        ${items.map(p=>`
          <div class="item" ${p.booked ? '' : `onclick="go('driver.passenger.req',${encodeURIComponent(JSON.stringify(p))})"`}>
            <div class="meta">
              ${p.booked ? Dot('orange') : Dot('green')}
              <div>
                <div class="name" style="${p.booked?'color:var(--grey)':''}">${p.name}</div>
                <div class="muted">${p.from} ‚Üí ${p.to} ‚Ä¢ ${p.when}</div>
                ${p.booked ? `<div class="muted">–∑–∞–±—Ä–æ–Ω—å–æ–≤–∞–Ω–æ</div>`:''}
              </div>
            </div>
          </div>
        `).join('')}
      </div>
    </div>
  `;
}
function viewDriverPassengerRequest(){
  const p = AppState.data;
  return `
    <div class="card">
      ${header({showBack:true, role:'driver'})}
      <div class="h1">${p.name}</div>
      <div class="section stack mt-4">
        <div class="row"><strong>–¢–µ–ª–µ—Ñ–æ–Ω</strong><span>${p.phone}</span></div>
        <div class="row"><strong>–ú–∞—Ä—à—Ä—É—Ç</strong><span>${p.from} ‚Üí ${p.to}</span></div>
        <div class="row"><strong>–ö–æ–ª–∏</strong><span>${p.when}</span></div>
        <div class="row"><strong>–†–µ–π—Ç–∏–Ω–≥</strong>${Stars(4 + Math.random())}</div>
      </div>
      <div class="stack mt-4">
        <button class="btn primary" onclick="alert('–ß–∞—Ç –ø–æ–∫–∏ –æ–∫—Ä–µ–º–æ. (–ø—ñ–∑–Ω—ñ—à–µ)')"><i class="ri-chat-3-line"></i> –ù–∞–ø–∏—Å–∞—Ç–∏</button>
      </div>
    </div>
  `;
}

/* DRIVER: Rating */
function viewDriverRating(){
  const d = Drivers.find(x=>x.id==='d1');
  return `
    <div class="card">
      ${header({showBack:true, role:'driver'})}
      <div class="row gap-3">
        <div class="avatar"><i class="ri-car-line"></i></div>
        <div>
          <div class="h1">${d.name}</div>
          <div class="sub">${d.phone} ‚Ä¢ ${d.car}</div>
          ${Stars(d.rating)}
        </div>
      </div>
      <div class="section stack mt-4">
        ${d.reviews.map(r=>`
          <div class="item left">
            ${Stars(r.stars)} <div class="muted">–≤—ñ–¥ ${r.a}</div>
            <div style="flex:1"></div>
            <div>${r.text}</div>
          </div>
        `).join('')}
      </div>
    </div>
  `;
}

/* DRIVER: Settings + QR */
function viewDriverSettings(){
  return `
    <div class="card">
      ${header({showBack:true, role:'driver'})}
      <div class="h1">–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è (–≤–æ–¥—ñ–π)</div>
      <div class="stack mt-4">
        <div class="item left" onclick="alert('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ ‚Äî –ø—ñ–∑–Ω—ñ—à–µ')"><i class="ri-user-add-line"></i> <strong>–î–æ–¥–∞—Ç–∏ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ—ñ–ª—é</strong></div>
        <div class="item left" onclick="editBio('driver')"><i class="ri-edit-2-line"></i> <strong>–ó–º—ñ–Ω–∏—Ç–∏ –æ–ø–∏—Å –ø—Ä–æ—Ñ—ñ–ª—é</strong></div>
        <div class="item left" onclick="setTariff()"><i class="ri-copper-coin-line"></i> <strong>–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —Ç–∞—Ä–∏—Ñ</strong></div>
        <div class="item left" onclick="alert('–î–æ–¥–∞—Ç–∏ –∫–∞—Ä—Ç–∫—É –¥–ª—è –æ–ø–ª–∞—Ç–∏ ‚Äî –ø—ñ–∑–Ω—ñ—à–µ')"><i class="ri-bank-card-line"></i> <strong>–ö–∞—Ä—Ç–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç–∏</strong></div>
        <div class="item left" onclick="showRideHistory('driver')"><i class="ri-road-map-line"></i> <strong>–Ü—Å—Ç–æ—Ä—ñ—è –ø–æ—ó–∑–¥–æ–∫</strong></div>
        <div class="item left" onclick="confirmDelete()"><i class="ri-delete-bin-6-line"></i> <strong>–í–∏–¥–∞–ª–∏—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å</strong></div>
      </div>
    </div>
  `;
}
function setTariff(){ alert('–¢–∞—Ä–∏—Ñ –∑–±–µ—Ä–µ–∂–µ–Ω–æ (–¥–µ–º–æ).'); }
function editBio(role){ prompt('–û–ø–∏—à—ñ—Ç—å —Å–µ–±–µ –∫–æ—Ä–æ—Ç–∫–æ:', role==='driver' ? '–ê–∫—É—Ä–∞—Ç–Ω–∏–π –≤–æ–¥—ñ–π. –ü—Ä–∞—Ü—é—é —â–æ–¥–Ω—è 8:00‚Äì20:00.' : '–õ—é–±–ª—é —Ç–∏—à—É –ø—ñ–¥ —á–∞—Å –ø–æ—ó–∑–¥–æ–∫.'); }
function showRideHistory(role){
  alert('–Ü—Å—Ç–æ—Ä—ñ—è –ø–æ—ó–∑–¥–æ–∫ (–¥–µ–º–æ):\n‚Äî 24.08 ‚Ä¢ –í–∞–ª–∫–∏ ‚Üí –ú—É–∑–µ–π–Ω–∞\n‚Äî 20.08 ‚Ä¢ –•–∞—Ä–∫—ñ–≤ ‚Üí –í–∞–ª–∫–∏\n‚Äî 18.08 ‚Ä¢ –í–µ—Å–Ω—è–Ω–∞ ‚Üí –ó–æ—Ä—è–Ω–∞');
}
function confirmDelete(){
  if(confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Å–≤—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å?')) alert('–ü—Ä–æ—Ñ—ñ–ª—å –≤–∏–¥–∞–ª–µ–Ω–æ (–¥–µ–º–æ).');
}
function viewDriverQR(){
  return `
    <div class="card">
      ${header({showBack:true, role:'driver'})}
      <div class="h1">QR-–∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç–∏</div>
      <div class="section stack mt-4">
        <div id="qr" class="qr"></div>
        <div class="muted">–†–∞–Ω–¥–æ–º–Ω–∏–π QR (–¥–µ–º–æ)</div>
      </div>
    </div>
  `;
}

/* DRIVER: Kharkiv route */
function viewDriverKharkiv(){
  const online = Drivers.filter(d=>d.online && !d.busy).slice(0,5);
  return `
    <div class="card">
      ${header({showBack:true, role:'driver'})}
      <div class="h1">–í–∞–ª–∫–∏ ‚Äî –•–∞—Ä–∫—ñ–≤</div>
      <div class="sub">–°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –∑–∞–ø–∏—Ç–∏ –Ω–∞ —Ü–µ–π –º–∞—Ä—à—Ä—É—Ç</div>
      <div class="stack mt-4">
        ${online.map(d=>`
          <div class="item">
            <div class="meta">${Dot('green')}<div>
              <div class="name">${d.name} ‚Ä¢ ${d.car}</div>
              <div class="muted">${d.phone}</div>
            </div></div>
            <button class="btn" onclick="alert('–ó–∞–ø–∏—Ç –ø—Ä–∏–π–Ω—è—Ç–æ (–¥–µ–º–æ)')">–ü—Ä–∏–π–Ω—è—Ç–∏</button>
          </div>
        `).join('')}
      </div>
    </div>
  `;
}

/* PASSENGER HOME */
function viewPassengerHome(){
  const meId = 'p1';
  const list = PassengerOrders[meId]||[];
  const activeCount = list.filter(o=>o.status==='active').length;
  const onlineDrivers = Drivers.filter(d=>d.online && !d.busy).length;

  return `
    <div class="card">
      ${header({showBack:true, role:'passenger'})}
      <div class="h1">–ü–∞–Ω–µ–ª—å –ø–∞—Å–∞–∂–∏—Ä–∞</div>
      <div class="sub">–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è, –ø–æ—à—É–∫ –≤–æ–¥—ñ—è —Ç–∞ —Ä–µ–π—Ç–∏–Ω–≥</div>

      <div class="stack">
        <div class="section stack">
          <div class="row">
            <div class="item left" onclick="go('passenger.orders')">
              <div class="meta"><i class="ri-smartphone-line"></i><div>
                <div class="name">–ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</div>
                <div class="muted">–ê–∫—Ç–∏–≤–Ω—ñ: ${activeCount} (–º–∞–∫—Å 1)</div>
              </div></div>
            </div>
          </div>

          <div class="row">
            <div class="item left" onclick="go('passenger.find')">
              <div class="meta"><i class="ri-taxi-line"></i><div>
                <div class="name">–ó–Ω–∞–π—Ç–∏ –≤–æ–¥—ñ—è</div>
                <div class="muted">–û–Ω–ª–∞–π–Ω: ${onlineDrivers}</div>
              </div></div>
              ${Dot('green')}
            </div>
          </div>

          <div class="row">
            <div class="item left" onclick="go('passenger.rating')">
              <div class="meta"><i class="ri-star-smile-line"></i><div>
                <div class="name">–ú—ñ–π —Ä–µ–π—Ç–∏–Ω–≥</div>
                <div class="muted">–í—ñ–¥–≥—É–∫–∏ –≤—ñ–¥ –≤–æ–¥—ñ—ó–≤</div>
              </div></div>
              <div>${Stars(4.8)}</div>
            </div>
          </div>

          <div class="row">
            <div class="item left" onclick="go('passenger.kharkiv')">
              <div class="meta"><i class="ri-route-line"></i><div>
                <div class="name">–í–∞–ª–∫–∏ ‚Äî –•–∞—Ä–∫—ñ–≤</div>
                <div class="muted">–ó–Ω–∞–π—Ç–∏ –≤–æ–¥—ñ—ó–≤ –Ω–∞ –Ω–∞–ø—Ä—è–º–∫—É</div>
              </div></div>
            </div>
          </div>
        </div>

        <div class="section stack">
          <div class="row">
            <div class="item left" onclick="go('passenger.settings')">
              <div class="meta"><i class="ri-settings-3-line"></i><div class="name">–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</div></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  `;
}

/* PASSENGER: Orders */
function viewPassengerOrders(){
  const meId = 'p1';
  const list = PassengerOrders[meId] || [];
  return `
    <div class="card">
      ${header({showBack:true, role:'passenger'})}
      <div class="h1">–ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è

